version: '3.8'
services:

  nginx:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    # restart: unless-stopped
    volumes:
      - ./www:/var/www/html
      - ./docker/conf/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/conf/nginx/templates:/etc/nginx/templates
      - volume-mkcert:/root/mkcert
    depends_on:
      - php
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
      - "${NGINX_PORT_SSL}:${NGINX_PORT_SSL}"
    environment:
      NGINX_HOST: ${NGINX_HOST}
      NGINX_PORT: ${NGINX_PORT}
      NGINX_PORT_SSL: ${NGINX_PORT_SSL}

  php:
    build: ./docker/images/php-${PHP_VERSION}
    image: ${COMPOSE_PROJECT_NAME}-php:${PHP_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-php
    volumes:
      - ./www:/var/www/html
      - ./docker/bash_history/php/.bash_history:/home/www-data/.bash_history
      - volume-ca-certificates:/usr/local/share/ca-certificates
    environment:
      TZ: 'Europe/Moscow'
      NGINX_HOST: ${NGINX_HOST}
      XDEBUG_CONFIG: client_host=${XDEBUG_CLIENT_HOST} client_port=${XDEBUG_PORT}
      XDEBUG_TRIGGER: ${XDEBUG_TRIGGER}
    depends_on:
      - memcached
      - mailhog

  mysql:
    build: ./docker/images/mysql-${MYSQL_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-mysql
    # restart: unless-stopped
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - volume-mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: 'Europe/Moscow'

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: ${COMPOSE_PROJECT_NAME}-phpmyadmin
    # restart: unless-stopped
    depends_on:
      - mysql
    ports:
      - ${PHPMYADMIN_PORT}:80
    environment:
      PMA_HOST: mysql

  memcached:
    image: memcached:alpine
    container_name: ${COMPOSE_PROJECT_NAME}-memcached
    ports:
      - "${MEMCACHED_PORT}:11211"

  mailhog:
    image: mailhog/mailhog
    container_name: ${COMPOSE_PROJECT_NAME}-mailhog
    ports:
      - "${MAILHOG_PORT_SMTP}:1025"
      - "${MAILHOG_PORT_HTTP}:8025"

  mkcert:
    build: ./docker/images/mkcert
    container_name: ${COMPOSE_PROJECT_NAME}-mkcert
    environment:
      NGINX_HOST: ${NGINX_HOST}
      TZ: 'Europe/Moscow'
    volumes:
      - volume-mkcert:/root/mkcert
      - volume-ca-certificates:/usr/local/share/ca-certificates

  rabbitmq:
    image: 'rabbitmq:3.10.5-management'
    container_name: ${COMPOSE_PROJECT_NAME}-rabbitmq
    ports:
      - '${RABBIT_PORT}:5672'
      - '${RABBIT_PORT_ADMIN}:15672'
    environment:
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"

  redis:
    image: redis:7
    container_name: ${COMPOSE_PROJECT_NAME}-redis-db
    restart: unless-stopped
    volumes:
      - ./redis/data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - '${REDIS_HOST}:${REDIS_HOST}'
    command: redis-server

  push-server-pub:
    image: ikarpovich/bitrix-push-server
    container_name: ${COMPOSE_PROJECT_NAME}-push-server
    links:
      - redis
    networks:
      - default
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - LISTEN_HOSTNAME=${LISTEN_HOSTNAME}
      - LISTEN_PORT=${NGINX_PORT}
      - SECURITY_KEY=${SECURITY_KEY}
      - MODE=${MODE}

volumes:
  volume-mysql:
  volume-mkcert:
  volume-ca-certificates:
  volume-www:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${APP_CODE_PATH_HOST}
